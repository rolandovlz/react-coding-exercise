{"version":3,"sources":["components/StyledComponents.js","components/Loader.js","components/Header.js","components/Cards.js","components/Launches.js","graphql/queries.js","components/App.js","index.js"],"names":["Wrapper","styled","div","props","darkMode","HeaderBar","header","HeaderText","h3","LaunchesWrapper","Title","h2","Container","Card","CardImage","img","CardText","Link","a","LoaderWrapper","Loader","Header","toggleDarkMode","onClick","Cards","launches","map","id","mission_name","links","href","video_link","target","rel","src","flickr_images","alt","article_link","Launches","role","ALL_LAUNCHES_PAST","gql","App","useState","setLaunches","setDarkMode","useQuery","data","error","loading","useEffect","launchesPast","filter","launch","length","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"6RAEMA,EAAUC,IAAOC,IAAV,yHAIS,SAAAC,GAAK,OAAIA,EAAMC,SAAW,UAAY,aAGtDC,EAAYJ,IAAOK,OAAV,0MAOC,SAAAH,GAAK,OAAIA,EAAMC,SAAW,UAAY,aACtC,SAAAD,GAAK,OAAIA,EAAMC,SAAW,yCAA2C,sCAG/EG,EAAaN,IAAOO,GAAV,+DAEL,SAAAL,GAAK,OAAIA,EAAMC,SAAW,UAAY,aAG3CK,EAAkBR,IAAOC,IAAV,oGAOfQ,EAAQT,IAAOU,GAAV,+DAEA,SAAAR,GAAK,OAAIA,EAAMC,SAAW,UAAY,aAG3CQ,EAAYX,IAAOC,IAAV,qUACO,SAAAC,GAAK,OAAIA,EAAMC,SAAW,UAAY,aAatDS,EAAOZ,IAAOC,IAAV,kSAOM,SAAAC,GAAK,OAAIA,EAAMC,SAAW,UAAY,aAMpC,SAAAD,GAAK,OAAIA,EAAMC,SAAW,0CAA4C,uCAIlFU,EAAYb,IAAOc,IAAV,0GAOTC,EAAWf,IAAOC,IAAV,mMAQH,SAAAC,GAAK,OAAIA,EAAMC,SAAW,UAAY,aAG3Ca,EAAOhB,IAAOiB,EAAV,qEAEC,SAAAf,GAAK,OAAIA,EAAMC,SAAW,UAAY,aAG3Ce,EAAgBlB,IAAOC,IAAV,wH,OC7EJkB,EATA,WAEb,OACE,cAACD,EAAD,UACE,cAAC,aAAD,OCISE,EAVA,SAAC,GAAkC,IAAhCjB,EAA+B,EAA/BA,SAAUkB,EAAqB,EAArBA,eAC1B,OACE,cAACjB,EAAD,CAAWD,SAAUA,EAArB,SACE,cAACG,EAAD,CAAYH,SAAUA,EAAUmB,QAASD,EAAzC,2BCmCSE,EAjCD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUrB,EAAe,EAAfA,SACzB,OACE,mCAEEqB,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,MAArB,OACX,eAAChB,EAAD,CAAeT,SAAUA,EAAzB,UACE,cAACa,EAAD,CACEa,KAAMD,EAAME,WACZC,OAAO,SACPC,IAAI,sBAHN,SAKE,cAACnB,EAAD,CACEoB,IAAKL,EAAMM,cACXC,IAAKR,MAGT,cAACZ,EAAD,CAAUZ,SAAUA,EAApB,SACE,cAACa,EAAD,CACEa,KAAMD,EAAMQ,aACZL,OAAO,SACP5B,SAAUA,EACV6B,IAAI,sBAJN,SAME,iCAASL,UAlBJD,SCQJW,EAbE,SAAC,GAA4B,IAA1Bb,EAAyB,EAAzBA,SAAUrB,EAAe,EAAfA,SAC5B,OACE,eAACK,EAAD,WACE,eAACC,EAAD,CAAON,SAAUA,EAAjB,6BACkB,sBAAMmC,KAAK,MAAM,aAAW,SAA5B,6BAElB,cAAC3B,EAAD,CAAWR,SAAUA,EAArB,SACE,cAAC,EAAD,CAAOqB,SAAUA,EAAUrB,SAAUA,U,QCbvCoC,EAAoBC,YAAH,oMC8CRC,EAxCH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOlB,EAAP,KAAiBmB,EAAjB,KACA,EAAgCD,oBAAS,GAAzC,mBAAOvC,EAAP,KAAiByC,EAAjB,KACA,EAAiCC,YAASN,GAAlCO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAerB,GAbAC,qBAAU,WACJH,GACFH,EACEG,EAAKI,aACJC,QAAO,SAAAC,GAAM,OACZA,EAAOxB,MAAMM,cAAcmB,OAAS,GACP,MAA7BD,EAAOxB,MAAMQ,cACc,MAA3BgB,EAAOxB,MAAME,iBAIlB,CAACgB,IAEAE,EAAS,OACX,cAAC,EAAD,IAGF,GAAID,EAAO,MAAM,UAAN,OAAiBA,GAI5B,OACE,eAAChD,EAAD,CAASI,SAAUA,EAAnB,UACE,cAAC,EAAD,CACEA,SAAUA,EACVkB,eANiB,kBAAMuB,GAAazC,MAQtC,cAAC,EAAD,CACEqB,SAAUA,EACVrB,SAAUA,QCjCZmD,EAAS,IAAIC,IAAa,CAC9BC,IAAK,kCACLC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.cc37c07d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background-color: ${props => props.darkMode ? '#121212' : '#F5F5F5'};\n`;\n\nconst HeaderBar = styled.header`\n  display: flex;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  background: ${props => props.darkMode ? '#202224' : '#FFFFFF'};\n  box-shadow: ${props => props.darkMode ? 'rgb(255 255 255 / 30%) 0px 1px 2px 0px' : 'rgb(0 0 0 / 30%) 0px 1px 2px 0px'};\n`;\n\nconst HeaderText = styled.h3`\n  cursor: pointer;\n  color: ${props => props.darkMode ? '#FFFFFF' : '#000000'};\n`;\n\nconst LaunchesWrapper = styled.div`\n  padding: 0 10%;\n  @media (max-width: 600px) {\n    padding: 0;\n  }\n`;\n\nconst Title = styled.h2`\n  padding: 0 1rem;\n  color: ${props => props.darkMode ? '#FFFFFF' : '#000000'};\n`;\n\nconst Container = styled.div`\n  background-color: ${props => props.darkMode ? '#121212' : '#F5F5F5'};\n  display: grid;\n  gap: 2rem;\n  justify-items: center;\n  padding: 0 1rem;\n  padding-bottom: 3rem;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  @media (max-width: 600px) {\n    grid-template-columns: repeat(auto-fit, 100%);\n    gap: 1rem;\n  }\n`;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 450px;\n  min-height: 250px;\n  border-radius: 5%;\n  background: ${props => props.darkMode ? '#202224' : '#FFFFFF'};\n  opacity: 0.8;\n  transition: 0.3s;\n  overflow: hidden;\n  &:hover {\n    opacity: 1;\n    box-shadow: ${props => props.darkMode ? 'rgb(255 255 255 / 50%) 0px 0px 10px 2px' : 'rgb(0 0 0 / 50%) 0px 0px 10px 2px'};\n  }\n`;\n\nconst CardImage = styled.img`\n  width: 100%;\n  height: 200px;\n  min-height: 200px;\n  object-fit: cover;\n`;\n\nconst CardText = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  padding: 1.5rem 0;\n  color: ${props => props.darkMode ? '#FFFFFF' : '#000000'};\n`;\n\nconst Link = styled.a`\n  text-decoration: none;\n  color: ${props => props.darkMode ? '#FFFFFF' : '#000000'};\n`;\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n`;\n\nexport {\n  Wrapper,\n  HeaderBar,\n  HeaderText,\n  LaunchesWrapper,\n  Title,\n  Container,\n  Card,\n  CardImage,\n  CardText,\n  Link,\n  LoaderWrapper\n}","import React from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { LoaderWrapper } from './StyledComponents';\n\n\nconst Loader = () => {\n\n  return (\n    <LoaderWrapper>\n      <SyncLoader></SyncLoader>\n    </LoaderWrapper>\n  )\n}\n\nexport default Loader;","import React from 'react';\nimport { HeaderBar, HeaderText } from './StyledComponents';\n\nconst Header = ({ darkMode, toggleDarkMode }) => {\n  return (\n    <HeaderBar darkMode={darkMode}>\n      <HeaderText darkMode={darkMode} onClick={toggleDarkMode}>\n        rolandovlz\n      </HeaderText>\n    </HeaderBar>\n  )\n}\n\nexport default Header","import React from 'react';\nimport {\n  Card,\n  CardImage,\n  CardText,\n  Link\n} from './StyledComponents';\n\nconst Cards = ({ launches, darkMode }) => {\n  return (\n    <>\n    {\n      launches.map(({ id, mission_name, links }) => (\n        <Card key={id} darkMode={darkMode}>\n          <Link \n            href={links.video_link} \n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <CardImage \n              src={links.flickr_images} \n              alt={mission_name}\n            />\n          </Link>\n          <CardText darkMode={darkMode}>\n            <Link \n              href={links.article_link} \n              target=\"_blank\"\n              darkMode={darkMode}\n              rel=\"noopener noreferrer\"\n            >\n              <strong>{mission_name}</strong>\n            </Link>\n          </CardText>\n        </Card>\n      ))\n    }\n    </>\n  )\n}\n\nexport default Cards;","import React from 'react';\nimport { \n  LaunchesWrapper,\n  Title,\n  Container,\n} from './StyledComponents';\nimport Cards from './Cards';\n\nconst Launches = ({ launches, darkMode }) => {\n  return (\n    <LaunchesWrapper>\n      <Title darkMode={darkMode}>\n        SpaceX Launches <span role=\"img\" aria-label=\"rocket\">ðŸš€</span>\n      </Title>\n      <Container darkMode={darkMode}>\n        <Cards launches={launches} darkMode={darkMode} />\n      </Container>\n    </LaunchesWrapper>\n  )\n}\n\nexport default Launches;\n\n","import { gql } from '@apollo/client';\n\nconst ALL_LAUNCHES_PAST = gql`\n  {\n    launchesPast(limit: 30) {\n      id\n      mission_name\n      links {\n        flickr_images\n        article_link\n        video_link\n      }\n    } \n  }\n`;\n\nexport { \n  ALL_LAUNCHES_PAST \n}","import React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Loader from './Loader';\nimport { Wrapper } from './StyledComponents';\nimport Header from './Header';\nimport Launches from './Launches';\nimport { ALL_LAUNCHES_PAST } from '../graphql/queries';\n\nconst App = () => {\n  const [launches, setLaunches] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const { data, error, loading } = useQuery(ALL_LAUNCHES_PAST);\n\n  useEffect(() => {\n    if (data) {\n      setLaunches(\n        data.launchesPast\n        .filter(launch => \n          launch.links.flickr_images.length > 0 &&\n          launch.links.article_link != null &&\n          launch.links.video_link != null\n        )\n      );\n    }\n  }, [data]);\n\n  if (loading) return (\n    <Loader />\n  );\n  \n  if (error) return `Error: ${error}`;\n\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n\n  return (\n    <Wrapper darkMode={darkMode}>\n      <Header \n        darkMode={darkMode}\n        toggleDarkMode={toggleDarkMode}\n      />\n      <Launches \n        launches={launches} \n        darkMode={darkMode}\n      />\n    </Wrapper>\n  )\n}\n\nexport default App;\n\n","import ReactDOM from 'react-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider\n} from '@apollo/client';\nimport './index.css';\nimport App from './components/App';\n\nconst client = new ApolloClient({\n  uri: 'https://api.spacex.land/graphql',\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}